:pnlgrp.

.************************************************************************
.*
.*  Command: QSHEXEC
.*
.*           All Help
.*
.************************************************************************
:HELP NAME='QSHEXEC/ALL'.
:IMHELP NAME='QSHEXEC'.
:IMHELP NAME='QSHEXEC/CMDLINE'.
:IMHELP NAME='QSHEXEC/SETPKGPATH'.
:IMHELP NAME='QSHEXEC/DSPSTDOUT'.
:IMHELP NAME='QSHEXEC/LOGSTDOUT'.
:IMHELP NAME='QSHEXEC/PRTSTDOUT'.
:IMHELP NAME='QSHEXEC/DLTSTDOUT'.
:IMHELP NAME='QSHEXEC/IFSSTDOUT'.
:IMHELP NAME='QSHEXEC/IFSFILE'.
:IMHELP NAME='QSHEXEC/IFSOPT'.
:IMHELP NAME='QSHEXEC/CCSID'.
:IMHELP NAME='QSHEXEC/PRTSPLF'.
:IMHELP NAME='QSHEXEC/PRTUSRDTA'.
:IMHELP NAME='QSHEXEC/PRTTXT'.
:IMHELP NAME='QSHEXEC/PRTHOLD'.
:IMHELP NAME='QSHEXEC/PRTOUTQ'.
:IMHELP NAME='QSHEXEC/OUTFILE'.
:IMHELP NAME='QSHEXEC/MBROPT'.
:IMHELP NAME='QSHEXEC/PASEJOBNAM'.
:IMHELP NAME='QSHEXEC/COMMAND/EXAMPLES'.
:IMHELP NAME='QSHEXEC/ERROR/MESSAGES'.
:EHELP.

.************************************************************************
.*  Primary Help for command QSHEXEC
.************************************************************************
:help name='QSHEXEC'.
Run Qshell Command Line - Help
:p.The Run Qshell Command Line (QSHEXEC) command can be used to run a QSH/PASE command and log the results
appropriately.
.* Describe the function provided by the command.
:p.
:hp3.Stdout Logging Note::ehp3.
During execution, the CL command always creates a temporary outfile in
library QTEMP that gets automatically populated with standard output (stdout) from the
QSH/PASE command process that gets run.
The temporary stdout output file name is: :hp2.QTEMP/STDOUTQSH:ehp2..
:p.
If the file already exists for a subsequent run of the command, the :hp2.QTEMP/STDOUTQSH:ehp2.
temporary file is automatically cleared before
running so each run gets a fresh copy of :hp2.QTEMP/STDOUTQSH:ehp2..
The :hp2.QTEMP/STDOUTQSH:ehp2. temp file gets created automatically always,
even if none of the switches such as: :hp2.DSPSTDOUT, LOGSTDOUT, PRTSTDOUT or IFSSTDOUT:ehp2.
are specified.
:P.
:IMHELP NAME='COMMON/ASTERISK'.
:ehelp.
.*******************************************
.*   Help for parameter CMDLINE
.*******************************************
:help name='QSHEXEC/CMDLINE'.
QSH command line (CMDLINE) - Help
:xh3.QSH command line (CMDLINE)
:p.Specifies the Qsh/Pase command line sequence to run. Semicolons can be used to run multiple commands.
.* Describe the function provided by the parameter.
:p.This is a required parameter.
:parml.
:pt.:pv.character-value:epv.
:pd.
Enter any valid Qsh/Pase commands, in sequence, to run. Semicolons can be used to run multiple commands.
The name of a file can be specified to run a script. The script file must be in the current working
directory or in the PATH. The script file must be a valid Qsh/Pase script file.
.* Describe the function provided by the user-defined parameter value.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter SETPKGPATH
.*******************************************
:help name='QSHEXEC/SETPKGPATH'.
Set QOpenSys yum package path (SETPKGPATH) - Help
:xh3.Set QOpenSys yum package path (SETPKGPATH)
:p.Add the IBM i Open Source Package path :hp2./QOpenSys/pkgs/bin:ehp2. to PATH environment
variable by calling QSHPATH command before running QSH/PASE commands.
:parml.
:pt.:pk.*NO:epk.
:pd.
Do not include the QOpenSys yum package path.
:pt.:pk def.*YES:epk.
:pd.
Include the QOpenSys yum package path.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter DSPSTDOUT
.*******************************************
:help name='QSHEXEC/DSPSTDOUT'.
Display standard output result (DSPSTDOUT) - Help
:xh3.Display standard output result (DSPSTDOUT)
:p.Display the outfile contents. Helpful when debugging.
:parml.
:pt.:pk def.*NO:epk.
:pd.
Do not display the outfile contents to the terminal.
:pt.:pk.*YES:epk.
:pd.
Display the outfile contents to the terminal.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter LOGSTDOUT
.*******************************************
:help name='QSHEXEC/LOGSTDOUT'.
Log standard output to job log (LOGSTDOUT) - Help
:xh3.Log standard output to job log (LOGSTDOUT)
:p.Place STDOUT log entries into the current job's job log.
Use this if you want the log info in the IBM i job log.
All STDOUT entries are written as CPF message: :hp2.QSS9898:ehp2.
:parml.
:pt.:pk def.*NO:epk.
:pd.
Do not write the standard output log entries to the job log.
:pt.:pk.*YES:epk.
:pd.
Write the standard output log entries to the job log as :hp2.QSS9898:ehp2. messages.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter PRTSTDOUT
.*******************************************
:help name='QSHEXEC/PRTSTDOUT'.
Print standard output result (PRTSTDOUT) - Help
:xh3.Print standard output result (PRTSTDOUT)
:p.Print STDOUT to a spool file. Use this if you want a spool file of the log output.
:parml.
:pt.:pk def.*NO:epk.
:pd.
Do not print the standard output result to a spool file.
.* Describe the function provided by the pre-defined parameter value.
:pt.:pk.*YES:epk.
:pd.
Print the standard output result to a spool file named, by default, QSHEXECLOG.
The spool file name can be changed by using the PRTSPLF parameter.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter DLTSTDOUT
.*******************************************
:help name='QSHEXEC/DLTSTDOUT'.
Delete standard output result (DLTSTDOUT) - Help
:xh3.Delete standard output result (DLTSTDOUT)
:p.This option insures that the STDOUT IFS temp files get cleaned up after processing.
All IFS log files get created in the /tmp/qsh directory.
:parml.
:pt.:pk.*NO:epk.
:pd.
The IFS temp files are not deleted after processing.
:pt.:pk def.*YES:epk.
:pd.
The IFS temp files are deleted after processing.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter IFSSTDOUT
.*******************************************
:help name='QSHEXEC/IFSSTDOUT'.
Copy std output to IFS file (IFSSTDOUT) - Help
:xh3.Copy std output to IFS file (IFSSTDOUT)
:p.Copy standard output to an IFS file. Useful for aggregating log results to a file.
:parml.
:pt.:pk def.*NO:epk.
:pd.
Do not copy the standard output to an IFS file.
:pt.:pk.*YES:epk.
:pd.
Copy the standard output to an IFS file.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter IFSFILE
.*******************************************
:help name='QSHEXEC/IFSFILE'.
IFS file for stdout results (IFSFILE) - Help
:xh3.IFS file for stdout results (IFSFILE)
:p.Used in conjunction with the IFSSTDOUT parameter (when set to :hp2.*YES:ehp2.)
to specify the name of the
IFS file to copy the stdout results to.
:parml.
:pt.:pv.IFS file for stdout results. Needs to be specified if IFSSTDOUT = *YES.:epv.
:pd.
Specify the name, including path, of the IFS file to copy the stdout results to
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter IFSOPT
.*******************************************
:help name='QSHEXEC/IFSOPT'.
IFS file option (IFSOPT) - Help
:xh3.IFS file option (IFSOPT)
:p.Specifies whether the copy operation replaces, adds, or
fails to copy the records in a stream file if a stream
file with the specified name already exists. If the stream
file does not exist, it is created.
:parml.
:pt.:pk.*ADD:epk.
:pd.
The stdout records are added to the end of the existing IFS file.
:pt.:pk def.*REPLACE:epk.
:pd.
The stdout records replace the existing IFS file records.
:pt.:pk.*NONE:epk.
:pd.
No stdout records are copied and the operation will fail.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter CCSID
.*******************************************
:help name='QSHEXEC/CCSID'.
Coded character set ID for job (CCSID) - Help
:xh3.Coded character set ID for job (CCSID)
:p.Specifies the coded character set identifier (CCSID) used
for this command execution.
:p.When using the iToolkit component for command access, I originally had some issues
with CL commands not working correctly. However I don't currently remember exactly why.
This may have been solved, however I recommend still passing a value of 37 unless you
are in a non US country.
:parml.
:pt.:pk def.*SAME:epk.
:pd.
If you set to *SAME, the CCSID will stay the same as your current job with no change.
:pt.:pv.1-65535:epv.
:pd.
Specify the CCSID.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter PRTSPLF
.*******************************************
:help name='QSHEXEC/PRTSPLF'.
Print stdout spool file (PRTSPLF) - Help
:xh3.Print stdout spool file (PRTSPLF)
:p.This option holds the name of the spool file used when PRTSTDOUT = *YES.
It's a nice way to customize the stdout log prints.
:parml.
:pt.:pk def.QSHEXECLOG:epk.
:pd.
Default spool file name is QSHEXECLOG.
:pt.:pv.character-value:epv.
:pd.
Specify the name of the spool file to print the stdout results to.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter PRTUSRDTA
.*******************************************
:help name='QSHEXEC/PRTUSRDTA'.
Print stdout user data (PRTUSRDTA) - Help
:xh3.Print stdout user data (PRTUSRDTA)
:p.This option holds the name of the spool file user data used when PRTSTDOUT = *YES.
:parml.
:pt.:pk def.*NONE:epk.
:pd.
No user data is specified.
:pt.:pv.character-value:epv.
:pd.
Specify the characters to use for the spool file user data.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter PRTTXT
.*******************************************
:help name='QSHEXEC/PRTTXT'.
Print stdout print text (PRTTXT) - Help
:xh3.Print stdout print text (PRTTXT)
:p.This option holds the name of the spool file print txt to be used when PRTSTDOUT = *YES.
:parml.
:pt.:pk def.*NONE:epk.
:pd.
No print text is specified.
:pt.:pv.character-value:epv.
:pd.
Specify the characters to use for the spool file print text.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter PRTHOLD
.*******************************************
:help name='QSHEXEC/PRTHOLD'.
Print stdout hold spool file (PRTHOLD) - Help
:xh3.Print stdout hold spool file (PRTHOLD)
:p.This option determines if the spool file is held if one is generated when PRTSTDOUT = *YES.
:parml.
:pt.:pk.*NONE:epk.
:pd.
<...>
.* Describe the function provided by the pre-defined parameter value.
:pt.:pk.*NO:epk.
:pd.
<...>
.* Describe the function provided by the pre-defined parameter value.
:pt.:pk def.*YES:epk.
:pd.
<...>
.* Describe the function provided by the pre-defined parameter value.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter PRTOUTQ
.*******************************************
:help name='QSHEXEC/PRTOUTQ'.
Print stdout to outq (PRTOUTQ) - Help
:xh3.Print stdout to outq (PRTOUTQ)
:p.Specifies <...>
.* Describe the function provided by the parameter.
:p.:hp2.Qualifier 1: Print stdout to outq:ehp2.
:parml.
:pt.:pk def.*SAME:epk.
:pd.
<...>
.* Describe the function provided by the pre-defined parameter value.
:pt.:pv.name:epv.
:pd.
Specify the name of <...>
.* Describe the function provided by the user-defined parameter value.
:eparml.
:p.:hp2.Qualifier 2: Library:ehp2.
:parml.
:pt.:pk def.*LIBL:epk.
:pd.
<...>
.* Describe the function provided by the pre-defined parameter value.
:pt.:pv.name:epv.
:pd.
Specify the name of <...>
.* Describe the function provided by the user-defined parameter value.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter OUTFILE
.*******************************************
:help name='QSHEXEC/OUTFILE'.
File to receive output (OUTFILE) - Help
:xh3.File to receive output (OUTFILE)
:p.Specifies <...>
.* Describe the function provided by the parameter.
:p.:hp2.Qualifier 1: File to receive output:ehp2.
:parml.:pt.:pk def.STDOUTQSH:epk.
:pd.
<...>
.* Describe the function provided by the default parameter value.
:pt.:pk.*SAME:epk.
:pd.
<...>
.* Describe the function provided by the pre-defined parameter value.
:pt.:pv.name:epv.
:pd.
Specify the name of <...>
.* Describe the function provided by the user-defined parameter value.
:eparml.
:p.:hp2.Qualifier 2: Library:ehp2.
:parml.:pt.:pk def.QTEMP:epk.
:pd.
<...>
.* Describe the function provided by the default parameter value.
:pt.:pk.*LIBL:epk.
:pd.
<...>
.* Describe the function provided by the pre-defined parameter value.
:pt.:pv.name:epv.
:pd.
Specify the name of <...>
.* Describe the function provided by the user-defined parameter value.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter MBROPT
.*******************************************
:help name='QSHEXEC/MBROPT'.
Replace or add records (MBROPT) - Help
:xh3.Replace or add records (MBROPT)
:p.Specifies <...>
.* Describe the function provided by the parameter.
:parml.
:pt.:pk.*ADD:epk.
:pd.
<...>
.* Describe the function provided by the pre-defined parameter value.
:pt.:pk def.*REPLACE:epk.
:pd.
<...>
.* Describe the function provided by the pre-defined parameter value.
:eparml.
:ehelp.
.*******************************************
.*   Help for parameter PASEJOBNAM
.*******************************************
:help name='QSHEXEC/PASEJOBNAM'.
PASE fork thread job names (PASEJOBNAM) - Help
:xh3.PASE fork thread job names (PASEJOBNAM)
:p.Specifies <...>
.* Describe the function provided by the parameter.
:parml.
:pt.:pk def.*DEFAULT:epk.
:pd.
<...>
.* Describe the function provided by the default parameter value.
:pt.:pv.character-value:epv.
:pd.
Specify the <...>
.* Describe the function provided by the user-defined parameter value.
:eparml.
:ehelp.
.**************************************************
.*
.* Examples for QSHEXEC
.*
.**************************************************
:help name='QSHEXEC/COMMAND/EXAMPLES'.
Examples for QSHEXEC - Help
:xh3.Examples for QSHEXEC
:p.:hp2.Example 1: Simple Command Example:ehp2.
:xmp.
QSHEXEC  KWD1(PARMVAL1)
:exmp.
:p.This command <...>
.* Describe a simple invocation of the command.
.*
:p.:hp2.Example 2: More Complex Command Example:ehp2.
:xmp.
QSHEXEC   KWD1(PARMVAL1)  KWD2(PARMVAL2)
          KWD3(PARMVAL3)
:exmp.
:p.This command <...>
.* Describe a more complex invocation of the command.
:ehelp.
.**************************************************
.*
.* Error messages for QSHEXEC
.*
.**************************************************
:help name='QSHEXEC/ERROR/MESSAGES'.
&msg(CPX0005,QCPFMSG). QSHEXEC - Help
:xh3.&msg(CPX0005,QCPFMSG). QSHEXEC
:p.:hp3.*ESCAPE &msg(CPX0006,QCPFMSG).:ehp3.
.************************************************************************
.* List the *ESCAPE, *STATUS, and *NOTIFY messages signalled from the command.
.* The following are generic messages defined in message file QCPFMSG.
.* Modify this list to match the list of error messages for the command.
.************************************************************************
:DL COMPACT.
:DT.CPF9801
:DD.&MSG(CPF9801,QCPFMSG,*LIBL,nosub).
:DT.CPF9802
:DD.&MSG(CPF9802,QCPFMSG,*LIBL,nosub).
:DT.CPF9803
:DD.&MSG(CPF9803,QCPFMSG,*LIBL,nosub).
:DT.CPF9807
:DD.&MSG(CPF9807,QCPFMSG,*LIBL,nosub).
:DT.CPF9808
:DD.&MSG(CPF9808,QCPFMSG,*LIBL,nosub).
:DT.CPF9810
:DD.&MSG(CPF9810,QCPFMSG,*LIBL,nosub).
:DT.CPF9811
:DD.&MSG(CPF9811,QCPFMSG,*LIBL,nosub).
:DT.CPF9812
:DD.&MSG(CPF9812,QCPFMSG,*LIBL,nosub).
:DT.CPF9820
:DD.&MSG(CPF9820,QCPFMSG,*LIBL,nosub).
:DT.CPF9830
:DD.&MSG(CPF9830,QCPFMSG,*LIBL,nosub).
:DT.CPF9899
:DD.&MSG(CPF9899,QCPFMSG,*LIBL,nosub).
:EDL.
:ehelp.
.*****************************************************************
.*  COMMON HELP
.*
.*  Common help text modules (can be embedded elsewhere)
.*
.*****************************************************************
:HELP NAME='COMMON/ASTERISK'.
:NT.
Do not precede an entry with an asterisk unless that entry is a
"special value" that is shown (on the display itself or in the help
information) with an asterisk.
:ENT.
:EHELP.

:epnlgrp.

