:pnlgrp.
.************************************************************************
.*
.*  QSHONICMDS.PNLGRP - Complete Command Help for QshOni Project
.*
.************************************************************************

.************************************************************************
.*  Primary Help for command QSHEXEC
.************************************************************************
:help name='QSHEXEC'.
Run Qshell Command Line - Help
:p.The Run Qshell Command Line (QSHEXEC) command can be used to run a QSH/PASE command and log the results
appropriately.
:p.The following example calls the ls command to list files for the /tmp directory:
:XMP.
:hp2.
QSHEXEC CMDLINE('cd /tmp;ls')
    DSPSTDOUT(*YES)
    LOGSTDOUT(*NO)
    PRTSTDOUT(*NO)
    DLTSTDOUT(*YES)
    IFSSTDOUT(*NO)
    IFSFILE('/tmp/log.txt')
    IFSOPT(*REPLACE)
    PRTSPLF(QSHEXECLOG)
    PRTUSRDTA(*NONE)
    PRTTXT(*NONE)
:ehp2.
:EXMP.
:p.The following example runs an SQL query with db2util and exports the results as JSON to the QTEMP/STDOUTQ
:XMP.
:hp2.
QSHEXEC CMDLINE('export DB2UTIL_JSON_CONTAINER=array;db2util -o json "select * from qiws.qcustcdt"')
    DSPSTDOUT(*YES)
:ehp2.
:EXMP.
:IMHELP NAME='COMMON/LOGGINGNOTE'.
:P.
:IMHELP NAME='COMMON/ASTERISK'.
:ehelp.

:help name='QSHEXEC/CMDLINE'.
:IMHELP NAME='COMMON/CMDLINE'.
:ehelp.
:help name='QSHEXEC/SETPKGPATH'.
:IMHELP NAME='COMMON/SETPKGPATH'.
:ehelp.
:help name='QSHEXEC/DSPSTDOUT'.
:IMHELP NAME='COMMON/DSPSTDOUT'.
:ehelp.
:help name='QSHEXEC/LOGSTDOUT'.
:IMHELP NAME='COMMON/LOGSTDOUT'.
:ehelp.
:help name='QSHEXEC/PRTSTDOUT'.
:IMHELP NAME='COMMON/PRTSTDOUT'.
:ehelp.
:help name='QSHEXEC/DLTSTDOUT'.
:IMHELP NAME='COMMON/DLTSTDOUT'.
:ehelp.
:help name='QSHEXEC/IFSSTDOUT'.
:IMHELP NAME='COMMON/IFSSTDOUT'.
:ehelp.
:help name='QSHEXEC/IFSFILE'.
:IMHELP NAME='COMMON/IFSFILE'.
:ehelp.
:help name='QSHEXEC/IFSOPT'.
:IMHELP NAME='COMMON/IFSOPT'.
:ehelp.
:help name='QSHEXEC/CCSID'.
:IMHELP NAME='COMMON/CCSID'.
:ehelp.
:help name='QSHEXEC/PRTSPLF'.
:IMHELP NAME='COMMON/PRTSPLF'.
:ehelp.
:help name='QSHEXEC/PRTUSRDTA'.
:IMHELP NAME='COMMON/PRTUSRDTA'.
:ehelp.
:help name='QSHEXEC/PRTTXT'.
:IMHELP NAME='COMMON/PRTTXT'.
:ehelp.
:help name='QSHEXEC/PRTHOLD'.
:IMHELP NAME='COMMON/PRTHOLD'.
:ehelp.
:help name='QSHEXEC/PRTOUTQ'.
:IMHELP NAME='COMMON/PRTOUTQ'.
:ehelp.
:help name='QSHEXEC/OUTFILE'.
:IMHELP NAME='COMMON/OUTFILE'.
:ehelp.
:help name='QSHEXEC/MBROPT'.
:IMHELP NAME='COMMON/MBROPT'.
:ehelp.
:help name='QSHEXEC/PASEJOBNAM'.
:IMHELP NAME='COMMON/PASEJOBNAM'.
:ehelp.


.************************************************************************
.*  Primary Help for command QSHEXECSRC
.************************************************************************
:help name='QSHEXECSRC'.
Run Qshell .sh Script from Src - Help
:p.The Run Qshell .sh Script from Src (QSHEXECSRC) command can be used to run a
QSH/PASE command shell script from a classic source physical file member
and log the results appropriately.
:P.
The use case would be for an app where you want to store your
QShell/PASE/Python/PHP/Etc. scripts as part of your library source and
execute those scripts directly from a source physical file.
:p.The following example calls a QShell source member QSHELL01 stored in
source file QSHONI/SOURCE to run the ls command to list files for the /tmp directory:
:XMP.
:hp2.
QSHEXECSRC SRCFILE(QSHONI/SOURCE)
    SRCMBR(QSHELL01)
    CMDPARM(' ')
    DSPSTDOUT(*YES)
    LOGSTDOUT(*NO)
    PRTSTDOUT(*NO)
    DLTSTDOUT(*YES)
    IFSSTDOUT(*NO)
    IFSFILE('/tmp/log.txt')
    IFSOPT(*REPLACE)
    PRTSPLF(QSHEXECLOG)
    PRTUSRDTA(*NONE)
    PRTTXT(*NONE)
    RMVTMPSCR(*YES)
    PROMPTCMD(*NO)
:ehp2.
:EXMP.
:p.Sample QShell source member: QSHONI/SOURCE(QSHELL01) Type: TXT Text: QShell
script to List Files in /tmp folder
:XMP.
:hp2.
cd /tmp
ls -l
:ehp2.
:EXMP.
:IMHELP NAME='COMMON/LOGGINGNOTE'.
:P.
:IMHELP NAME='COMMON/ASTERISK'.
:ehelp.

:help name='QSHEXECSRC/SRCFILE'.
:IMHELP NAME='COMMON/SRCFILE'.
:ehelp.
:help name='QSHEXECSRC/SRCMBR'.
:IMHELP NAME='COMMON/SRCMBR'.
:ehelp.
:help name='QSHEXECSRC/CMDPARM'.
QSH script command line parms (CMDPARM) - Help
:xh3.QSH script command line parms (CMDPARM)
:IMHELP name='COMMON/CMDPARM'.
:ehelp.
:help name='QSHEXECSRC/SETPKGPATH'.
:IMHELP NAME='COMMON/SETPKGPATH'.
:ehelp.
:help name='QSHEXECSRC/DSPSTDOUT'.
:IMHELP NAME='COMMON/DSPSTDOUT'.
:ehelp.
:help name='QSHEXECSRC/LOGSTDOUT'.
:IMHELP NAME='COMMON/LOGSTDOUT'.
:ehelp.
:help name='QSHEXECSRC/PRTSTDOUT'.
:IMHELP NAME='COMMON/PRTSTDOUT'.
:ehelp.
:help name='QSHEXECSRC/DLTSTDOUT'.
:IMHELP NAME='COMMON/DLTSTDOUT'.
:ehelp.
:help name='QSHEXECSRC/IFSSTDOUT'.
:IMHELP NAME='COMMON/IFSSTDOUT'.
:ehelp.
:help name='QSHEXECSRC/IFSFILE'.
:IMHELP NAME='COMMON/IFSFILE'.
:ehelp.
:help name='QSHEXECSRC/IFSOPT'.
:IMHELP NAME='COMMON/IFSOPT'.
:ehelp.
:help name='QSHEXECSRC/CCSID'.
:IMHELP NAME='COMMON/CCSID'.
:ehelp.
:help name='QSHEXECSRC/PRTSPLF'.
:IMHELP NAME='COMMON/PRTSPLF'.
:ehelp.
:help name='QSHEXECSRC/PRTUSRDTA'.
:IMHELP NAME='COMMON/PRTUSRDTA'.
:ehelp.
:help name='QSHEXECSRC/PRTTXT'.
:IMHELP NAME='COMMON/PRTTXT'.
:ehelp.
:help name='QSHEXECSRC/PRTHOLD'.
:IMHELP NAME='COMMON/PRTHOLD'.
:ehelp.
:help name='QSHEXECSRC/PRTOUTQ'.
:IMHELP NAME='COMMON/PRTOUTQ'.
:ehelp.
:help name='QSHEXECSRC/OUTFILE'.
:IMHELP NAME='COMMON/OUTFILE'.
:ehelp.
:help name='QSHEXECSRC/MBROPT'.
:IMHELP NAME='COMMON/MBROPT'.
:ehelp.
:help name='QSHEXECSRC/PASEJOBNAM'.
:IMHELP NAME='COMMON/PASEJOBNAM'.
:ehelp.
:help name='QSHEXECSRC/RMVTMPSCR'.
:IMHELP NAME='COMMON/RMVTMPSCR'.
:ehelp.
:help name='QSHEXECSRC/PROMPTCMD'.
:IMHELP NAME='COMMON/PROMPTCMD'.
:ehelp.


.***********************************************************************
.*  Command-specific help for QSHBASH
.***********************************************************************
:HELP NAME='QSHBASH'.
Run Bash command (QSHBASH) - Help
:p.
This CL command can be used to run a PASE bash command
and log the results appropriately.
:p.
The command is a convenience wrapper that can be used to call
a bash command with QSHEXEC instead of having to type the
following bash command sequence prefix on a
QSHEXEC command line: :hp2.bash -c cmdline:ehp2.
:p.The following example calls the ls command to list files for the /tmp directory using the bash command:
:XMP.
:hp2.
QSHBASH CMDLINE('cd /tmp;ls')
    DSPSTDOUT(*YES)
    LOGSTDOUT(*NO)
    PRTSTDOUT(*NO)
    DLTSTDOUT(*YES)
    IFSSTDOUT(*NO)
    IFSFILE('/tmp/log.txt')
    IFSOPT(*REPLACE)
    PRTSPLF(QSHEXECLOG)
    PRTUSRDTA(*NONE)
    PRTTXT(*NONE)
:ehp2.
:EXMP.
:p.The following example runs an SQL query with db2util and exports the results as JSON
to the QTEMP/STDOUTQSH outfile:
:XMP.
:hp2.
QSHBASH CMDLINE('export DB2UTIL_JSON_CONTAINER=array;db2util -o json "select * from qiws.qcustcdt"')
    DSPSTDOUT(*YES)
:ehp2.
:EXMP.
:IMHELP NAME='COMMON/LOGGINGNOTE'.
:P.
:IMHELP NAME='COMMON/ASTERISK'.
:ehelp.

:help name='QSHBASH/CMDLINE'.
Bash command line (CMDLINE) - Help
:xh3.Bash command line (CMDLINE)
:p.Bash command line sequence to run. Semicolons can be used to run multiple commands.
:parml.
:pt.:pv.character-value:epv.
:pd.Enter a valid Bash command line, or script filename if in PATH.
:eparml.
:P.
:IMHELP NAME='COMMON/REQPARM'.
:ehelp.
:help name='QSHBASH/CMDLINEDLM'.
Bash command line delimiter (CMDLINEDLM) - Help
:xh3.Bash command line delimiter (CMDLINEDLM)
:p.Specifies the command line delimiter for Bash commands.
:parml.
:pt.:pk def.*SGLQUOTE:epk.
:pd.Defaults to single quote, which is what it has been since inception.
:pt.:pk.*DBLQUOTE:epk.
:pd.Uses double quotes instead of single quotes.
:pt.:pk.*NONE:epk.
:pd.No delimiter is used.
:pt.:pk.character-value:epk.
:pd.Enter a custom delimiter character.
:eparml.
:ehelp.
:help name='QSHBASH/DEBUGCMD'.
Debug bash command line (DEBUGCMD) - Help
:xh3.Debug bash command line (DEBUGCMD)
:p.Allows the developer to prompt and see the actual bash command line that is being called.
:parml.
:pt.:pk def.*NO:epk.
:pd.Do not debug the command line.
:pt.:pk.*YES:epk.
:pd.Debug the command line.
:eparml.
:ehelp.
:help name='QSHBASH/SETPKGPATH'.
:IMHELP NAME='COMMON/SETPKGPATH'.
:ehelp.
:help name='QSHBASH/DSPSTDOUT'.
:IMHELP NAME='COMMON/DSPSTDOUT'.
:ehelp.
:help name='QSHBASH/LOGSTDOUT'.
:IMHELP NAME='COMMON/LOGSTDOUT'.
:ehelp.
:help name='QSHBASH/PRTSTDOUT'.
:IMHELP NAME='COMMON/PRTSTDOUT'.
:ehelp.
:help name='QSHBASH/DLTSTDOUT'.
:IMHELP NAME='COMMON/DLTSTDOUT'.
:ehelp.
:help name='QSHBASH/IFSSTDOUT'.
:IMHELP NAME='COMMON/IFSSTDOUT'.
:ehelp.
:help name='QSHBASH/IFSFILE'.
:IMHELP NAME='COMMON/IFSFILE'.
:ehelp.
:help name='QSHBASH/IFSOPT'.
:IMHELP NAME='COMMON/IFSOPT'.
:ehelp.
:help name='QSHBASH/CCSID'.
:IMHELP NAME='COMMON/CCSID'.
:ehelp.
:help name='QSHBASH/PRTSPLF'.
:IMHELP NAME='COMMON/PRTSPLF'.
:ehelp.
:help name='QSHBASH/PRTUSRDTA'.
:IMHELP NAME='COMMON/PRTUSRDTA'.
:ehelp.
:help name='QSHBASH/PRTTXT'.
:IMHELP NAME='COMMON/PRTTXT'.
:ehelp.
:help name='QSHBASH/PRTHOLD'.
:IMHELP NAME='COMMON/PRTHOLD'.
:ehelp.
:help name='QSHBASH/PRTOUTQ'.
:IMHELP NAME='COMMON/PRTOUTQ'.
:ehelp.
:help name='QSHBASH/OUTFILE'.
:IMHELP NAME='COMMON/OUTFILE'.
:ehelp.
:help name='QSHBASH/MBROPT'.
:IMHELP NAME='COMMON/MBROPT'.
:ehelp.
:help name='QSHBASH/PASEJOBNAM'.
:IMHELP NAME='COMMON/PASEJOBNAM'.
:ehelp.


.************************************************************************
.*  Primary Help for command QSHBASHSRC
.************************************************************************
:help name='QSHBASHSRC'.
Run Bash .sh Script from Src - Help
:p.The Run Bash .sh Script from Src (QSHBASHSRC) command can be used to run a
bash command shell script from a classic source physical file member
and log the results appropriately.
:P.
The use case would be for an app where you want to store your
Bash/QShell/PASE/Python/PHP/Etc. scripts as part of your library source and
execute those scripts directly from a source physical file.
:p.The following example calls a bash source member QSHELL01 stored in
source file QSHONI/SOURCE to run the ls command to list files for the /tmp directory:
:XMP.
:hp2.
QSHBASHSRC SRCFILE(QSHONI/SOURCE)
    SRCMBR(QSHELL01)
    CMDPARM(' ')
    DSPSTDOUT(*YES)
    LOGSTDOUT(*NO)
    PRTSTDOUT(*NO)
    DLTSTDOUT(*YES)
    IFSSTDOUT(*NO)
    IFSFILE('/tmp/log.txt')
    IFSOPT(*REPLACE)
    PRTSPLF(QSHBASHLOG)
    PRTUSRDTA(*NONE)
    PRTTXT(*NONE)
    RMVTMPSCR(*YES)
    PROMPTCMD(*NO)
:ehp2.
:EXMP.
:p.Sample bash source member: QSHONI/SOURCE(QSHELL01) Type: TXT Text: Bash script to List Files in /tmp fold
:XMP.
:hp2.
cd /tmp
ls -l
:ehp2.
:EXMP.
:IMHELP NAME='COMMON/LOGGINGNOTE'.
:P.
:IMHELP NAME='COMMON/ASTERISK'.
:ehelp.

:help name='QSHBASHSRC/SRCFILE'.
:IMHELP NAME='COMMON/SRCFILE'.
:ehelp.
:help name='QSHBASHSRC/SRCMBR'.
:IMHELP NAME='COMMON/SRCMBR'.
:ehelp.
:help name='QSHBASHSRC/CMDPARM'.
Script command line parms (CMDPARM) - Help
:xh3.Script command line parms (CMDPARM)
:IMHELP name='COMMON/CMDPARM'.
:ehelp.
:help name='QSHBASHSRC/SETPKGPATH'.
:IMHELP NAME='COMMON/SETPKGPATH'.
:ehelp.
:help name='QSHBASHSRC/DSPSTDOUT'.
:IMHELP NAME='COMMON/DSPSTDOUT'.
:ehelp.
:help name='QSHBASHSRC/LOGSTDOUT'.
:IMHELP NAME='COMMON/LOGSTDOUT'.
:ehelp.
:help name='QSHBASHSRC/PRTSTDOUT'.
:IMHELP NAME='COMMON/PRTSTDOUT'.
:ehelp.
:help name='QSHBASHSRC/DLTSTDOUT'.
:IMHELP NAME='COMMON/DLTSTDOUT'.
:ehelp.
:help name='QSHBASHSRC/IFSSTDOUT'.
:IMHELP NAME='COMMON/IFSSTDOUT'.
:ehelp.
:help name='QSHBASHSRC/IFSFILE'.
:IMHELP NAME='COMMON/IFSFILE'.
:ehelp.
:help name='QSHBASHSRC/IFSOPT'.
:IMHELP NAME='COMMON/IFSOPT'.
:ehelp.
:help name='QSHBASHSRC/CCSID'.
:IMHELP NAME='COMMON/CCSID'.
:ehelp.
:help name='QSHBASHSRC/PRTSPLF'.
:IMHELP NAME='COMMON/PRTSPLF'.
:ehelp.
:help name='QSHBASHSRC/PRTUSRDTA'.
:IMHELP NAME='COMMON/PRTUSRDTA'.
:ehelp.
:help name='QSHBASHSRC/PRTTXT'.
:IMHELP NAME='COMMON/PRTTXT'.
:ehelp.
:help name='QSHBASHSRC/PRTHOLD'.
:IMHELP NAME='COMMON/PRTHOLD'.
:ehelp.
:help name='QSHBASHSRC/PRTOUTQ'.
:IMHELP NAME='COMMON/PRTOUTQ'.
:ehelp.
:help name='QSHBASHSRC/OUTFILE'.
:IMHELP NAME='COMMON/OUTFILE'.
:ehelp.
:help name='QSHBASHSRC/MBROPT'.
:IMHELP NAME='COMMON/MBROPT'.
:ehelp.
:help name='QSHBASHSRC/PASEJOBNAM'.
:IMHELP NAME='COMMON/PASEJOBNAM'.
:ehelp.
:help name='QSHBASHSRC/RMVTMPSCR'.
:IMHELP NAME='COMMON/RMVTMPSCR'.
:ehelp.
:help name='QSHBASHSRC/PROMPTCMD'.
:IMHELP NAME='COMMON/PROMPTCMD'.
:ehelp.


.************************************************************************
.*  Primary Help for command QSHCURL
.************************************************************************
:help name='QSHCURL'.
Run Curl Command via Qshell - Help
:p.Run Curl Command via Qshell (QSHCURL) command to run a PASE curl command and
log the results appropriately.
:P.
The command is a convenience wrapper that can be used to call a curl command with QSHEXEC
instead of having to type the following full curl command sequence prefix on a
QSHEXEC command line: curl http://www.sitename.com -o /tmp/curlout.txt
:P.
:HP2.
curl must be installed in your PASE/QSH environment in /QOpensys/pkgs/bin before this will work
To install curl from qshell/bash:  yum install curl
:EHP2.
:p.The following example calls the curl command to download the google home page site contents
to an IFS file. You only need to pass the parms after curl.
:XMP.
:hp2.
QSHCURL CMDLINE('http://www.google.com -o /tmp/curlout.txt')
    DSPSTDOUT(*YES)
    LOGSTDOUT(*NO)
    PRTSTDOUT(*NO)
    DLTSTDOUT(*YES)
    IFSSTDOUT(*NO)
    IFSFILE('/tmp/log.txt')
    IFSOPT(*REPLACE)
    PRTSPLF(QSHEXECLOG)
    PRTUSRDTA(*NONE)
    PRTTXT(*NONE)
:ehp2.
:EXMP.
:p.The following example calls the curl command with the --help flag to display the curl parms available
:XMP.
:hp2.
QSHCURL CMDLINE('--help') DSPSTDOUT(*YES)
:ehp2.
:EXMP.
:IMHELP NAME='COMMON/LOGGINGNOTE'.
:P.
:IMHELP NAME='COMMON/ASTERISK'.
:ehelp.

:help name='QSHCURL/CMDLINE'.
Curl command line parms (CMDLINE) - Help
:xh3.Curl command line parms (CMDLINE)
:p.Specifies the curl command line sequence to run.
:ehelp.
:help name='QSHCURL/SETPKGPATH'.
:IMHELP NAME='COMMON/SETPKGPATH'.
:ehelp.
:help name='QSHCURL/DSPSTDOUT'.
:IMHELP NAME='COMMON/DSPSTDOUT'.
:ehelp.
:help name='QSHCURL/LOGSTDOUT'.
:IMHELP NAME='COMMON/LOGSTDOUT'.
:ehelp.
:help name='QSHCURL/PRTSTDOUT'.
:IMHELP NAME='COMMON/PRTSTDOUT'.
:ehelp.
:help name='QSHCURL/DLTSTDOUT'.
:IMHELP NAME='COMMON/DLTSTDOUT'.
:ehelp.
:help name='QSHCURL/IFSSTDOUT'.
:IMHELP NAME='COMMON/IFSSTDOUT'.
:ehelp.
:help name='QSHCURL/IFSFILE'.
:IMHELP NAME='COMMON/IFSFILE'.
:ehelp.
:help name='QSHCURL/IFSOPT'.
:IMHELP NAME='COMMON/IFSOPT'.
:ehelp.
:help name='QSHCURL/CCSID'.
:IMHELP NAME='COMMON/CCSID'.
:ehelp.
:help name='QSHCURL/PRTSPLF'.
:IMHELP NAME='COMMON/PRTSPLF'.
:ehelp.
:help name='QSHCURL/PRTUSRDTA'.
:IMHELP NAME='COMMON/PRTUSRDTA'.
:ehelp.
:help name='QSHCURL/PRTTXT'.
:IMHELP NAME='COMMON/PRTTXT'.
:ehelp.
:help name='QSHCURL/PRTHOLD'.
:IMHELP NAME='COMMON/PRTHOLD'.
:ehelp.
:help name='QSHCURL/PRTOUTQ'.
:IMHELP NAME='COMMON/PRTOUTQ'.
:ehelp.
:help name='QSHCURL/OUTFILE'.
:IMHELP NAME='COMMON/OUTFILE'.
:ehelp.
:help name='QSHCURL/MBROPT'.
:IMHELP NAME='COMMON/MBROPT'.
:ehelp.
:help name='QSHCURL/PASEJOBNAM'.
:IMHELP NAME='COMMON/PASEJOBNAM'.
:ehelp.


.************************************************************************
.*  Primary Help for command QSHPYRUN
.************************************************************************
:help name='QSHPYRUN'.
Run Python Script via Qshell - Help
:p.The Run Python Script via Qshell (QSHPYRUN) command is used to run a Python script
via QSHEXEC and log the results appropriately.
:p.The following example calls a helloworld.py script that write to STDOUT.
:XMP.
:hp2.
QSHPYRUN SCRIPTDIR('/pythonapps')
   SCRIPTFILE('hello.py')
   ARGS(Parm1 Parm2)
   PYVERSION(3)
   DSPSTDOUT(*YES)
   LOGSTDOUT(*NO)
   PRTSTDOUT(*NO)
   DLTSTDOUT(*YES)
   IFSSTDOUT(*NO)
   IFSFILE('/tmp/log.txt')
   IFSOPT(*REPLACE)
   PRTSPLF(QSHPYRUN)
   PRTUSRDTA(*NONE)
   PRTTXT(*NONE)
:ehp2.
:EXMP.
:IMHELP NAME='COMMON/LOGGINGNOTE'.
:P.
:IMHELP NAME='COMMON/ASTERISK'.
:ehelp.

:help name='QSHPYRUN/SCRIPTDIR'.
Python script directory (SCRIPTDIR) - Help
:xh3.Python script directory (SCRIPTDIR)
:p.The IFS directory location for the Python script. :hp2.Ex: /python:ehp2.
:ehelp.
:help name='QSHPYRUN/SCRIPTFILE'.
Python script file name (SCRIPTFILE) - Help
:xh3.Python script file name (SCRIPTFILE)
:p.The script file name you want to call without the directory path.
The QSHPYRUN command puts it all together. :hp2.Ex: hello.py:ehp2.
:ehelp.
:help name='QSHPYRUN/ARGS'.
Python command line arguments (ARGS) - Help
:xh3.Python command line arguments (ARGS)
:p.Command line parameter argument list.
:p.Up to 40 - 200 byte argument/parameter values can be passed to a Python script call.
:P.Each parm is automatically trimmed. Do NOT put double quotes around the parms or your program call
may get errors because your parameters get compromised with extra double quotes.
:P.The double quotes are already added automatically inside the CL command processing program.
Single quotes are allowed around your parmaeter data though if desired:
:hp2.Ex: 'My Parm Value 1' 'My Parm Value 2':ehp2.
:ehelp.
:help name='QSHPYRUN/ARGDLM'.
Command line argument delimiter (ARGDLM) - Help
:xh3.Command line argument delimiter (ARGDLM)
:parml.
:pt.:pk def.*DBLQUOTE:epk.
:pd.Double quotes are used to delimit the command line arguments.
:pt.:pk.*SINGLE:epk.
:pd.Single quotes are used to delimit the command line arguments.
:pt.:pk.*NONE:epk.
:pd.No delimiter is used.
:eparml.
:ehelp.
:help name='QSHPYRUN/PYVERSION'.
Python version (PYVERSION) - Help
:xh3.Python version (PYVERSION)
:p.Specifies the Python version to use to run the script.
It should be set to either 2 or 2.7 for Python 2 or 3, 3.6 or 3.9 for Python 3.
:ehelp.
:help name='QSHPYRUN/PYPATH'.
Python bin path (PYPATH) - Help
:xh3.Python bin path (PYPATH)
:p.The this is the directory path to your Python binaries (python/python3).
:p.Hopefully you have already installed the Yum versions so the default path should be good.
Leave value set to *DEFAULT. Default= /QOpenSys/pkgs/bin.
The default path lives in the PYPATH data area in the PYONI library.
:ehelp.
:help name='QSHPYRUN/SETPKGPATH'.
:IMHELP NAME='COMMON/SETPKGPATH'.
:ehelp.
:help name='QSHPYRUN/USEVENV'.
Use virtual environment (USEVENV) - Help
:xh3.Use virtual environment (USEVENV)
:p.Use virtual environment.
:parml.
:pt.:pk.*YES:epk.
:pd.Run your Python script using an existing Python virtual environment as
specified in the Python virtual environment path.
The IFS directory and virtual environment must exist.
:p.
:hp2.Note: When using virtual environment, you will need to make sure the PYPATH
data area value is set to ' ' or pass ' ' to the PYPATH parameter to make sure the system level
python binary does not picked up. Each venv has its own python executable:ehp2.
:pt.:pk def.*NO:epk.
:pd.Do not use a virtual environment.
:eparml.
:ehelp.
:help name='QSHPYRUN/DSPSTDOUT'.
:IMHELP NAME='COMMON/DSPSTDOUT'.
:ehelp.
:help name='QSHPYRUN/LOGSTDOUT'.
:IMHELP NAME='COMMON/LOGSTDOUT'.
:ehelp.
:help name='QSHPYRUN/PRTSTDOUT'.
:IMHELP NAME='COMMON/PRTSTDOUT'.
:ehelp.
:help name='QSHPYRUN/DLTSTDOUT'.
:IMHELP NAME='COMMON/DLTSTDOUT'.
:ehelp.
:help name='QSHPYRUN/IFSSTDOUT'.
:IMHELP NAME='COMMON/IFSSTDOUT'.
:ehelp.
:help name='QSHPYRUN/IFSFILE'.
:IMHELP NAME='COMMON/IFSFILE'.
:ehelp.
:help name='QSHPYRUN/IFSOPT'.
:IMHELP NAME='COMMON/IFSOPT'.
:ehelp.
:help name='QSHPYRUN/CCSID'.
:IMHELP NAME='COMMON/CCSID'.
:ehelp.
:help name='QSHPYRUN/PRTSPLF'.
:IMHELP NAME='COMMON/PRTSPLF'.
:ehelp.
:help name='QSHPYRUN/PRTUSRDTA'.
:IMHELP NAME='COMMON/PRTUSRDTA'.
:ehelp.
:help name='QSHPYRUN/PRTTXT'.
:IMHELP NAME='COMMON/PRTTXT'.
:ehelp.
:help name='QSHPYRUN/PRTHOLD'.
:IMHELP NAME='COMMON/PRTHOLD'.
:ehelp.
:help name='QSHPYRUN/PRTOUTQ'.
:IMHELP NAME='COMMON/PRTOUTQ'.
:ehelp.
:help name='QSHPYRUN/OUTFILE'.
:IMHELP NAME='COMMON/OUTFILE'.
:ehelp.
:help name='QSHPYRUN/MBROPT'.
:IMHELP NAME='COMMON/MBROPT'.
:ehelp.
:help name='QSHPYRUN/PASEJOBNAM'.
:IMHELP NAME='COMMON/PASEJOBNAM'.
:ehelp.
:help name='QSHPYRUN/DEBUGCMD'.
Debug QSHEXEC command (DEBUGCMD) - Help
:xh3.Debug QSHEXEC command (DEBUGCMD)
:parml.
:p.This parameter allows you to debug the command line that QSHPYRUN will run via QSHEXEC.
:pt.:pk.*YES:epk.
:pd.If set to *YES, your job must be running interactively and it will display the command line 
that QSHPYRUN composed to execute via QSHEXEC before it runs. 
:p.This is good for debugging or you are curious what the exec QSHEXEC command will look like. 
Under the covers QSHPYRUN utilizes the QSHEXEC command to run the Python command line.
:pt.:pk def.*NO:epk.
:pd.Do not debug the command line.
:eparml.
:ehelp.
:help name='QSHPYRUN/CHGSCRDIR'.
Change script directory (CHGSCRDIR) - Help
:xh3.Change script directory (CHGSCRDIR)
:p.Specifies whether to change the current working directory to the script directory 
before running the script.
:parml.
:pt.:pk def.*NO:epk.
:pd.Do not change the current working directory.
:pt.:pk.*YES:epk.
:pd.Change the current working directory to the script directory.
:eparml.
:ehelp.


.************************************************************************
.*  Primary Help for command QSHLOGSCAN
.************************************************************************
:help name='QSHLOGSCAN'.
Scan the stdout outfile for the selected value - Help
:p.This CL command is a convenience command that can be used to scan a 
STDOUT log for a specific value to indicate success or failure.
:p.The following example scans the outfile log in file QTEMP/STDOUTQSH for a 
text value of :hp3.successfully:ehp3. somewhere in any line of the log file output:
:XMP.
:hp2.
MONMSG MSGID(CPF9898) EXEC(DO)
SNDPGMMSG MSG('Did not find string of success in program output.') TOUSR(RICHARD)
ENDDO 
QSHLOGSCAN SCANFOR('successfully')   
EXACTMATCH(*NO)      
:ehp2.
:EXMP.
:P.
:IMHELP NAME='COMMON/ASTERISK'.
:ehelp.
:help name='QSHLOGSCAN/SCANFOR'.
Value to scan for (SCANFOR) - Help
:xh3.Value to scan for (SCANFOR)
:p.Text value to scan for on each line in the stdout outfile. 
:p.The value passed IS case sensitive and must match the value in the log file.
:ehelp.
:help name='QSHLOGSCAN/EXACTMATCH'.
Exact match (EXACTMATCH) - Help
:xh3.Exact match (EXACTMATCH)
:p.Exact match-*YES, Contains-*NO
:parml.
:pt.:pk def.*NO:epk.
:pd.At least one line must contain the value somewhere in the line. 
Good for generic matching.
:pt.:pk.*YES:epk.
:pd.Value must match exactly and be the only thing on the selected line.
:eparml.
:ehelp.


.************************************************************************
.*  Primary Help for command QQSHQRYTMP
.************************************************************************
:help name='QSHQRYTMP'.
SQL Query Data to Temp Table - Help
:p.This CL command is a convenience command that can be used to run an 
SQL data selection query and create an outfile of resulting data.
:p.The following example queries all the records from table QIWS/QCUSCTDT and 
places the result in to an output table named: SQLTMP0001 in library QTEMP.
:XMP.
:hp2.
QSHQRYTMP SQL('SELECT * FROM QIWS/QCUSTCDT')   
    OUTFILE(SQLTMP0001)                  
    EMPTYERROR(*YES)                     
    PROMPT(*NO)         
:ehp2.
:EXMP.
:P.
:IMHELP NAME='COMMON/ASTERISK'.
:ehelp.
:help name='QSHQRYTMP/SQL'.
SQL query (SQL) - Help
:xh3.SQL query (SQL)
:p.Enter an SQL SELECT statement to query some specific data.
:ehelp.
:help name='QSHQRYTMP/PARMS'.
SQL placeholder parm name (PARMS) - Help
:xh3.SQL placeholder parm name (PARMS)
:p.Enter up to 30 parameter placeholder values you want to replace dynamically 
in your SQL statements at runtime. These are not required if you don't want to 
dynamic parameter replacement.
:p.Ex: :hp2.@@LIB:ehp2. for library or :hp2.@@FILE:ehp2. for file.
:ehelp.



.*****************************************************************
.*  COMMON HELP
.*
.*  Common help text modules (can be embedded elsewhere)
.*
.*****************************************************************
:HELP NAME='COMMON/ASTERISK'.
:NT.
Do not precede an entry with an asterisk unless that entry is a
"special value" that is shown (on the display itself or in the help
information) with an asterisk.
:ENT.
:EHELP.

:HELP NAME='COMMON/REQPARM'.
:P.
This is a required parameter.
:EHELP.

:HELP NAME='COMMON/NOPARMS'.
:P.
There are no parameters for this command.
:EHELP.

:HELP NAME='COMMON/LIST'.
:P.
You can enter multiple values for this parameter.  If you are on an
entry display and you need additional entry fields to enter these
multiple values, type a plus sign (+) in the entry field opposite
the phrase "+ for more", and press the Enter key.
:EHELP.

:HELP NAME='COMMON/LOGGINGNOTE'.
:P.
:hp3.STDOUT Logging Note::ehp3.
During execution, the CL command always creates a temporary outfile in
library QTEMP that gets automatically populated with standard output (STDOUT) from the
QSH/PASE command process that gets run.
The temporary STDOUT output file name is: :hp2.QTEMP/STDOUTQSH:ehp2..
:p.
If the file already exists for a subsequent run of the command, the :hp2.QTEMP/STDOUTQSH:ehp2.
temporary file is automatically cleared before
running so each run gets a fresh copy of :hp2.QTEMP/STDOUTQSH:ehp2..
The :hp2.QTEMP/STDOUTQSH:ehp2. temp file gets created automatically always,
even if none of the switches such as: :hp2.DSPSTDOUT, LOGSTDOUT, PRTSTDOUT or IFSSTDOUT:ehp2.
are specified.
:EHELP.

.*******************************************
.*   Help for common parameters used across many
.*   QshOni commands.
.*
.*******************************************
.*   Help for parameter CMDLINE
.*******************************************
:HELP NAME='COMMON/CMDLINE'.
QSH command line (CMDLINE) - Help
:xh3.QSH command line (CMDLINE)
:p.Specifies the Qshell/PASE command line sequence to run. Semicolons can chain commands.
:parml.
:pt.:pv.character-value:epv.
:pd.Enter a valid Qshell or PASE command, or script filename if in PATH.
:eparml.
:P.
:IMHELP NAME='COMMON/REQPARM'.
:ehelp.

:HELP NAME='COMMON/SETPKGPATH'.
Set package path (SETPKGPATH) - Help
:xh3.Set QOpenSys package path (SETPKGPATH)
:p.Specifies whether to prepend /QOpenSys/pkgs/bin to PATH.
:parml.
:pt.:pk def.*YES:epk.
:pd.Include package path.
:pt.:pk.*NO:epk.
:pd.Do not include package path.
:eparml.
:ehelp.

:HELP NAME='COMMON/DSPSTDOUT'.
Display STDOUT (DSPSTDOUT) - Help
:xh3.Display standard output result (DSPSTDOUT)
:p.Specifies whether to display the STDOUT results on the terminal.
:parml.
:pt.:pk def.*NO:epk.
:pd.Do not display STDOUT.
:pt.:pk.*YES:epk.
:pd.Display STDOUT.
:eparml.
:ehelp.

:HELP NAME='COMMON/DLTSTDOUT'.
Delete STDOUT IFS file (DLTSTDOUT) - Help
:xh3.Delete standard output result (DLTSTDOUT)
:p.Specifies whether to delete temporary IFS STDOUT files after run.
:parml.
:pt.:pk def.*YES:epk.
:pd.Delete IFS STDOUT files.
:pt.:pk.*NO:epk.
:pd.Keep IFS STDOUT files.
:eparml.
:ehelp.

:HELP NAME='COMMON/IFSSTDOUT'.
Copy STDOUT to IFS (IFSSTDOUT) - Help
:xh3.Copy std output to IFS file (IFSSTDOUT)
:p.Specifies whether to copy STDOUT to an IFS file.
:parml.
:pt.:pk def.*NO:epk.
:pd.Do not copy STDOUT to IFS.
:pt.:pk.*YES:epk.
:pd.Copy STDOUT to IFS.
:eparml.
:ehelp.

:HELP NAME='COMMON/IFSFILE'.
IFS file (IFSFILE) - Help
:xh3.IFS file for STDOUT results (IFSFILE)
:p.Specifies the path of the IFS file to receive STDOUT output.
:parml.
:pt.:pv.character-value:epv.
:pd.Enter full IFS file path.
:eparml.
:ehelp.

:HELP NAME='COMMON/IFSOPT'.
IFS file option (IFSOPT) - Help
:xh3.IFS file option (IFSOPT)
:p.Specifies action if IFS file exists: replace, add, or fail.
:parml.
:pt.:pk def.*REPLACE:epk.
:pd.Overwrite existing file.
:pt.:pk.*ADD:epk.
:pd.Append to file.
:pt.:pk.*NONE:epk.
:pd.Fail if exists.
:eparml.
:ehelp.

:HELP NAME='COMMON/CCSID'.
Coded character set ID for job (CCSID) - Help
:xh3.Coded character set ID for job (CCSID)
:p.When using the iToolkit component for command access, I originally had some issues with CL commands not
working correctly. However I don't currently remember exactly why. This may have been solved, however I
recommend still passing unless you are in a non US country.
:parml.
:pt.:pk def.*SAME:epk.
:pd.If you set to *SAME, the CCSID will stay the same as your current job with no change.
:pt.:pk.1-65535:epk.
:pd.Specify the CCSID.
:eparml.
:ehelp.

:HELP NAME='COMMON/LOGSTDOUT'.
Log STDOUT (LOGSTDOUT) - Help
:xh3.Log standard output to job log (LOGSTDOUT)
:p.Specifies whether STDOUT is written to the job log.
:parml.
:pt.:pk def.*NO:epk.
:pd.Do not log STDOUT.
:pt.:pk.*YES:epk.
:pd.Write STDOUT log entries into the current job's job log.
Use this if you want the log info in the IBM i joblog.
All STDOUT entries are written as CPF message: :hp2.QSS9898:ehp2.
:eparml.
:ehelp.

:HELP NAME='COMMON/PRTSTDOUT'.
Print STDOUT (PRTSTDOUT) - Help
:xh3.Print standard output result (PRTSTDOUT)
:p.Specifies whether to print STDOUT to a spool file.
:parml.
:pt.:pk def.*NO:epk.
:pd.Do not print STDOUT.
:pt.:pk.*YES:epk.
:pd.Print STDOUT to spool.
:eparml.
:ehelp.

:HELP NAME='COMMON/PRTSPLF'.
Spool file name (PRTSPLF) - Help
:xh3.Print STDOUT spool file (PRTSPLF)
:p.Specifies spool file name for printed STDOUT.
:parml.
:pt.:pv.character-value:epv.
:pd.Enter spool file name.
:eparml.
:ehelp.

:HELP NAME='COMMON/PRTUSRDTA'.
Spool user data (PRTUSRDTA) - Help
:xh3.Print STDOUT user data (PRTUSRDTA)
:p.Specifies user data for spool generated by PRTSTDOUT.
:parml.
:pt.:pv.character-value:epv.
:pd.Enter user data or none.
:eparml.
:ehelp.

:HELP NAME='COMMON/PRTTXT'.
Spool text (PRTTXT) - Help
:xh3.Print STDOUT print text (PRTTXT)
:p.Specifies descriptive text for spool file by PRTSTDOUT.
:parml.
:pt.:pv.character-value:epv.
:pd.Enter descriptive text.
:eparml.
:ehelp.

:HELP NAME='COMMON/PRTHOLD'.
Hold spool (PRTHOLD) - Help
:xh3.Print STDOUT hold spool file (PRTHOLD)
:p.Specifies whether generated spool is held or released.
:parml.
:pt.:pk def.*YES:epk.
:pd.Hold spool file.
:pt.:pk.*NO:epk.
:pd.Release spool file.
:eparml.
:ehelp.

:HELP NAME='COMMON/PRTOUTQ'.
Output queue (PRTOUTQ) - Help
:xh3.Print STDOUT to outq (PRTOUTQ)
:p.Specifies the output queue for spool by PRTSTDOUT.
:P.
The possible values are:
:P.
:PARML.
:PT.:PK DEF.*SAME:EPK.
:PD.
The STDOUT spool file is placed on the job's output queue.
:PT.:PK.ouptput-queue-name:EPK.
:PD.
Specify the name (library-name/output-queue-name) of the output
queue on which the STDOUT spool file is placed.
:P.
The possible library values are:
:PARML.
:PT.:PK DEF.*LIBL:EPK.
:PD.
The library list is used to locate the output queue name.
:PT.:PK.library-name:EPK.
:PD.
Specify the name of the library where the output queue is located.
:EPARML.
:EPARML.
:ehelp.

:HELP NAME='COMMON/OUTFILE'.
Output file (OUTFILE) - Help
:xh3.File to receive output (OUTFILE)
:p.Specifies database file to receive STDOUT or SQL results.
:P.
The possible values are:
:P.
:PARML.
:PT.:PK DEF.STDOUTQSH:EPK.
:PD.
The database file to STDOUT spool file is placed on the job's output queue.
:PT.:PK.database-file-name:EPK.
:PD.
Specify the name (library-name/database-file-name) of the outfile.
:P.
The possible library values are:
:PARML.
:PT.:PK DEF.QTEMP:EPK.
:PD.
The QTEMP library is used.
:PT.:PK.library-name:EPK.
:PD.
Specify the name of the library where the outfile is located.
:EPARML.
:EPARML.
:ehelp.

:HELP NAME='COMMON/MBROPT'.
Member option (MBROPT) - Help
:xh3.Replace or add records (MBROPT)
:p.Specifies replace or add records in output file.
:parml.
:pt.:pk def.*REPLACE:epk.
:pd.Replace existing records.
:pt.:pk.*ADD:epk.
:pd.Add records to file.
:eparml.
:ehelp.

:HELP NAME='COMMON/PASEJOBNAM'.
PASE job name (PASEJOBNAM) - Help
:xh3.PASE fork thread job names (PASEJOBNAM)
:p.Set PASE_FORK_JOBNAME environment variable to set forked thread jobs
to have a unique name other than QP0ZSPWP which is the default.
Set the value or *DEFAULT=QP0ZSPWP.
:parml.
:pt.:pk def.*DEFAULT:epk.
:pd.Use QP0ZSPWP as default PASE job name.
:pt.:pv.character-value:epv.
:pd.Enter a custom PASE job name.
:eparml.
:ehelp.

:HELP NAME='COMMON/CRTIDCOL'.
Create identity column (CRTIDCOL) - Help
:xh3.Create identity column (CRTIDCOL)
:p.Specifies whether to add identity column to outfile.
:parml.
:pt.:pk def.*NO:epk.
:pd.Do not add identity column.
:pt.:pk.*YES:epk.
:pd.Add identity column.
:eparml.
:ehelp.

:HELP NAME='COMMON/JRN'.
Journal name (JRN) - Help
:xh3.Journal name (JRN)
:p.Specifies the journal to receive journal entries.
:parml.
:pt.:pv.name:epv.
:pd.Enter journal name.
:eparml.
:ehelp.

:HELP NAME='COMMON/JRNRCV'.
Journal receiver name (JRNRCV) - Help
:xh3.Journal receiver name (JRNRCV)
:p.Specifies the journal receiver for the journal.
:parml.
:pt.:pv.name:epv.
:pd.Enter receiver name.
:eparml.
:ehelp.

:HELP NAME='COMMON/SETENV'.
Set environment (SETENV) - Help
:xh3.Set shell environment (SETENV)
:p.Specifies whether to enable or disable environment wrapper.
:parml.
:pt.:pk def.*YES:epk.
:pd.Enable environment setup.
:pt.:pk.*NO:epk.
:pd.Disable environment setup.
:eparml.
:ehelp.

:HELP NAME='COMMON/OWNER'.
IFS file owner (OWNER) - Help
:xh3.Owner for IFS object (OWNER)
:p.Specifies owner profile for IFS file or directory.
:parml.
:pt.:pv.character-value:epv.
:pd.Enter user profile name.
:eparml.
:ehelp.

:HELP NAME='COMMON/AUT'.
Authority for IFS (AUT) - Help
:xh3.IFS authority setting (AUT)
:p.Specifies authority for IFS file or directory (e.g., *RWX, *RX).
:parml.
:pt.:pk def.*RX:epk.
:pd.Read/Execute only.
:pt.:pk.*RWX:epk.
:pd.Read, Write, Execute.
:eparml.
:ehelp.

:HELP NAME='COMMON/LOGTYPE'.
Log type (LOGTYPE) - Help
:xh3.Log type selector (LOGTYPE)
:p.Specifies log view: summary or detail.
:parml.
:pt.:pk def.*SUMMARY:epk.
:pd.Summary view.
:pt.:pk.*DETAIL:epk.
:pd.Detailed view.
:eparml.
:ehelp.

:HELP NAME='COMMON/SYMLNKTO'.
Symbolic link target (SYMLNKTO) - Help
:xh3.Symbolic link target path (SYMLNKTO)
:p.Specifies IFS target path for symlink.
:parml.
:pt.:pv.character-value:epv.
:pd.Enter full IFS path of target.
:eparml.
:ehelp.

:HELP NAME='COMMON/ERRMSGID'.
Error message file ID (ERRMSGID) - Help
:xh3.Error message identifier (ERRMSGID)
:p.Specifies message identifier to simulate an error.
:parml.
:pt.:pv.character-value:epv.
:pd.Enter CPF or user-defined message ID.
:eparml.
:ehelp.

:HELP NAME='COMMON/SRCFILE'.
Source file (SRCFILE) - Help
:xh3.Source file where QShell/PASE/Bash script is stored.
:p.Specifies source physical file containing QShell/PASE/Bash script.
:P.
The possible values are:
:P.
:PARML.
:PT.:PK.*SAME:EPK.
:PD.
??? UNKNOWN ???
:PT.:PK.source-physical-file-name:EPK.
:PD.
Specify the name (library-name/source-physical-file-name) of the source file.
:P.
The possible library values are:
:PARML.
:PT.:PK.library-name:EPK.
:PD.
Specify the name of the library where the source physical file is located.
:EPARML.
:EPARML.
:P.
:IMHELP NAME='COMMON/REQPARM'.
:ehelp.


:HELP NAME='COMMON/SRCMBR'.
Source member (SRCMBR) - Help
:xh3.Source member where QShell/PASE script is stored.
:p.Specifies source member containing QShell/PASE script.
:P.
The possible values are:
:P.
:PARML.
:PT.:PK.source-member-name:EPK.
:PD.
Specify the member name in the source file.
:EPARML.
:P.
:IMHELP NAME='COMMON/REQPARM'.
:ehelp.

:HELP NAME='COMMON/CMDPARM'.
:p.Specifies the command line parms to pass to the selected script that runs.
If no parameters are needed, simply pass ' ' for the CMDPARM value.
:P.
Parameters can be delimited with double quotes if needed.
Ex: "parm1" "parm2" "parm3"
:IMHELP NAME='COMMON/REQPARM'.
:ehelp.

:HELP NAME='COMMON/RMVTMPSCR'.
Remove temporary IFS script file (RMVTMPSCR) - Help
:xh3.Remove temporary IFS script file (RMVTMPSCR)
:p.This option determines if the temporary IFS script file is auto-deleted after running.
Normally the selection should be *YES to delete the temp file.
Otherwise specify *NO if you are debugging for some reason.
:parml.
:pt.:pk def.*YES:epk.
:pd.Deletes the temporary IFS script file after running.
:pt.:pk.*NO:epk.
:pd.Keeps the temporary IFS script file after running.
:eparml.
:ehelp.

:HELP NAME='COMMON/PROMPTCMD'.
Prompt Commands (PROMPTCMD) - Help
:xh3.Prompt commands (PROMPTCMD)
:p.This option determines if the QSH command is prompted interactively for testing or
review of the actual QShell command line with parameter values before running the command.
Normally the selection should be *NO since prompting is only needed if testing.
Specify *YES if you are debugging for some reason and want the QSH command to prompt
on an interactive 5250 session before running.
:parml.
:pt.:pk def.*NO:epk.
:pd.Does not prompt the QSH command for testing or review.
:pt.:pk.*YES:epk.
:pd.Prompts the QSH command for testing or review before running.
:eparml.
:ehelp.

:epnlgrp.
